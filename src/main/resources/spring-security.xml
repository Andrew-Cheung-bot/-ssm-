<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--不拦截的资源-->
    <http pattern="/login.html*" security="none" />
    <http pattern="/User/loginUser" security="none" />
    <http pattern="/User/registUser*" security="none" />
    <http pattern="/User/updateUser" security="none" />
    <http pattern="/user/**" security="none" />
    <http pattern="/static/**" security="none" />
    <http pattern="/checkCode*" security="none" />
    <!--
        auto-config 是否使用框架默认提供的登录界面
        use-expressions  是否使用SPEL表达式
    -->
    <beans:bean id="LoginAuthenticationSuccessHandler" class="com.how2java.security.reconstruct.LoginAuthenticationSuccessHandler" />
    <beans:bean id="LoginAuthenticationFailureHandler" class="com.how2java.security.reconstruct.LoginAuthenticationFailureHandler" />
    <http auto-config="true" use-expressions="true" >
        <!--intercept-url定义一个过滤规则 pattern表示对哪些url进行权限控制 access表示在请求对应的url时要什么权限
        默认配置时它应该是一个以逗号分隔的角色列表，请求的用户只需拥有其中的一个角色就能成功访问对应的url-->
        <intercept-url pattern="/Curtain/addCurtain" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/Curtain/deleteCurtain" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/Fan/addFan" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/Fan/deleteFan" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <!--auto-config配置后，不需要在配置下面信息 <security:form-login /> 定义登录表单信息
        <security:http-basic /> <security:logout />-->
        <!--form-login属性详解
        1. login-page 自定义登录页url,默认为/login
        2. login-processing-url 登录请求拦截的url,也就是form表单提交时指定的action
        3. default-target-url 默认登录成功后跳转的url
        4. always-use-default-target 是否总是使用默认的登录成功后跳转url
        5. authentication-failure-url 登录失败后跳转的url
        6. username-parameter 用户名的请求字段 默认为userName
        7. password-parameter 密码的请求字段 默认为password
        8. authentication-success-handler-ref 指向一个AuthenticationSuccessHandler用于处理认证成功的请求,不能和default-target-url还有always-use-default-target同时使用
        -->
        <form-login
                authentication-success-handler-ref="LoginAuthenticationSuccessHandler"
                authentication-failure-handler-ref="LoginAuthenticationFailureHandler"
                login-page="/login.html"
                login-processing-url="/login/"
        />
        <logout/>
        <csrf disabled="true" />
    </http>
    <authentication-manager>
        <authentication-provider user-service-ref="userService">
        </authentication-provider>
    </authentication-manager>
</beans:beans>